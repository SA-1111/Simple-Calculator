{"mappings":"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","sources":["<anon>","src/script/calculator.js"],"sourcesContent":["(function () {\n\n      var $parcel$global =\n        typeof globalThis !== 'undefined'\n          ? globalThis\n          : typeof self !== 'undefined'\n          ? self\n          : typeof window !== 'undefined'\n          ? window\n          : typeof global !== 'undefined'\n          ? global\n          : {};\n  \nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequire94c2\"];\n\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequire94c2\"] = parcelRequire;\n}\n\nvar parcelRegister = parcelRequire.register;\nparcelRegister(\"gEuKU\", function(module, exports) {\nlet calculation = [];\nif (localStorage.getItem('calculation') !== null) {\n    const storedCalculation = JSON.parse(localStorage.getItem('calculation'));\n    if (Array.isArray(storedCalculation)) calculation = storedCalculation;\n}\nlet newCalculation = {};\ndocument.addEventListener('DOMContentLoaded', ()=>{\n    const inputField = document.getElementById('input');\n    const outputField = document.getElementById('output');\n    const buttons = document.querySelectorAll('.cal_button');\n    const histbtn = document.getElementById('history_btn');\n    const advanceCal = document.getElementById('adv_btn');\n    const advKeyHolder = document.getElementById('key_holder_adv');\n    const histCloseBtn = document.getElementById(\"hist_close\");\n    const historyHolder = document.getElementById(\"history_holder\");\n    histbtn.addEventListener(\"click\", ()=>{\n        historyHolder.style.display = \"flex\";\n        document.body.scrollTop = 0;\n        document.documentElement.scrollTop = 0;\n        document.body.style.overflow = 'hidden';\n    });\n    histCloseBtn.addEventListener('click', (e)=>{\n        historyHolder.style.display = \"none\";\n        document.body.style.overflow = 'scroll';\n    });\n    let isRotated = false;\n    advanceCal.addEventListener(\"click\", (e)=>{\n        isRotated = !isRotated; // Toggle the rotation state\n        const rotation = isRotated ? \"rotate(180deg) translate(210%, -100%)\" : \"rotate(360deg) translate(-120%, 0%)\";\n        advanceCal.style.transform = `${rotation}`;\n        if (isRotated) advKeyHolder.style.display = \"block\";\n        else advKeyHolder.style.display = \"none \";\n    });\n    // Add click event listener to all buttons\n    buttons.forEach((button)=>{\n        button.addEventListener('click', (e)=>handleButtonClick(e, inputField, outputField));\n    });\n    updateHistoryList();\n});\nfunction updateHistoryList() {\n    const historyList = document.getElementById('history-list');\n    historyList.innerHTML = ''; // Clear the existing list\n    calculation.forEach((calc, index)=>{\n        const listItem = document.createElement('li');\n        const expressionSpan = document.createElement('span');\n        expressionSpan.className = 'expression';\n        expressionSpan.textContent = `Expression: ${calc.input}`;\n        const resultSpan = document.createElement('span');\n        resultSpan.className = 'result';\n        resultSpan.textContent = `Result: ${calc.result}`;\n        const deleteBtn = document.createElement('span');\n        deleteBtn.className = 'delete_btn';\n        deleteBtn.textContent = 'X';\n        deleteBtn.addEventListener('click', ()=>{\n            calculation.splice(index, 1);\n            localStorage.setItem('calculation', JSON.stringify(calculation));\n            updateHistoryList();\n        });\n        listItem.appendChild(expressionSpan);\n        listItem.appendChild(resultSpan);\n        listItem.appendChild(deleteBtn);\n        historyList.appendChild(listItem);\n    });\n}\nfunction handleButtonClick(event, inputField, outputField) {\n    const buttonText = event.target.textContent;\n    // Handle Clear (C)\n    if (buttonText === 'C') {\n        clearFields(inputField, outputField);\n        return;\n    }\n    // Handle Delete (del)\n    if (buttonText === 'del') {\n        deleteLastCharacter(inputField);\n        return;\n    }\n    // Handle Equal (=)\n    if (buttonText === '=') {\n        calculateResult(inputField, outputField);\n        return;\n    }\n    // Otherwise, add the clicked button's value to the input field\n    appendToInput(inputField, buttonText);\n}\nfunction calculate(input) {\n    input = input.replace(\"\\xd7\", '*');\n    input = input.replace(\"\\u221A\", 'sqrt');\n    input = input.replace(\"P\", 'permutations');\n    input = input.replace(\"C\", 'combinations');\n    input = input.replace(\"dy/dx\", 'derivative');\n    return math.evaluate(input);\n}\nfunction saveCalculation(str, result) {\n    newCalculation = {\n        input: str,\n        result: result\n    };\n    if (!calculation.some((cal)=>cal.input === str)) {\n        calculation.push(newCalculation);\n        localStorage.setItem('calculation', JSON.stringify(calculation));\n    }\n}\nfunction hasCalculation() {\n    return localStorage.getItem('calculation') !== null;\n}\nfunction clearFields(inputField, outputField) {\n    inputField.value = '';\n    outputField.value = '';\n}\nfunction deleteLastCharacter(inputField) {\n    inputField.value = inputField.value.slice(0, -1);\n}\nfunction appendToInput(inputField, text) {\n    inputField.value += text;\n}\nfunction calculateResult(inputField, outputField) {\n    try {\n        const result = calculate(inputField.value);\n        outputField.value = result;\n        saveCalculation(inputField.value, result);\n        eval(`boom()`);\n        updateHistoryList();\n    } catch (error) {\n        console.log(error);\n        outputField.value = 'Error';\n        eval(`sadboom()`);\n    }\n}\nfunction clearHistory() {\n    calculation = {};\n    localStorage.removeItem(\"calculation\");\n}\nfunction logHistory() {\n    console.log(JSON.parse(localStorage.getItem('calculation')));\n}\nwindow.logHistory = logHistory;\nwindow.clearHistory = clearHistory;\n\n});\n\n\nparcelRequire(\"gEuKU\");\n})();\n//# sourceMappingURL=index.298a9512.js.map\n","let calculation = [];\r\nif (localStorage.getItem('calculation') !== null) {\r\n    const storedCalculation = JSON.parse(localStorage.getItem('calculation'));\r\n    if (Array.isArray(storedCalculation)) {\r\n        calculation = storedCalculation;\r\n    }\r\n}\r\n\r\nlet newCalculation = {};\r\n\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n    const inputField = document.getElementById('input');\r\n    const outputField = document.getElementById('output');\r\n    const buttons = document.querySelectorAll('.cal_button');\r\n    \r\n    const histbtn = document.getElementById('history_btn');\r\n    const advanceCal = document.getElementById('adv_btn');\r\n    const advKeyHolder = document.getElementById('key_holder_adv');\r\n\r\n    const histCloseBtn =  document.getElementById(\"hist_close\");\r\n    const historyHolder = document.getElementById(\"history_holder\");\r\n    \r\n    histbtn.addEventListener(\"click\",()=>{\r\n        historyHolder.style.display = \"flex\"\r\n        document.body.scrollTop = 0;\r\n        document.documentElement.scrollTop = 0;\r\n        document.body.style.overflow = 'hidden';\r\n    })\r\n    \r\n    histCloseBtn.addEventListener('click', (e) => {\r\n        historyHolder.style.display = \"none\"\r\n        document.body.style.overflow = 'scroll';\r\n    })\r\n    \r\n    let isRotated = false;\r\n    advanceCal.addEventListener(\"click\", (e) => {\r\n        isRotated = !isRotated; // Toggle the rotation state\r\n        const rotation = isRotated ? \"rotate(180deg) translate(210%, -100%)\" : \"rotate(360deg) translate(-120%, 0%)\";\r\n        advanceCal.style.transform = `${rotation}`;    \r\n        if(isRotated){\r\n            advKeyHolder.style.display=\"block\";\r\n        }\r\n        else{\r\n            advKeyHolder.style.display=\"none \";\r\n        }\r\n    })\r\n\r\n    \r\n    \r\n    // Add click event listener to all buttons\r\n    buttons.forEach((button) => {\r\n        button.addEventListener('click', (e) => handleButtonClick(e, inputField, outputField));\r\n    });\r\n    \r\n    \r\n    updateHistoryList();\r\n    \r\n});\r\n\r\nfunction updateHistoryList() {\r\n    const historyList = document.getElementById('history-list');\r\n    historyList.innerHTML = ''; // Clear the existing list\r\n\r\n    calculation.forEach((calc, index) => {\r\n        const listItem = document.createElement('li');\r\n\r\n        const expressionSpan = document.createElement('span');\r\n        expressionSpan.className = 'expression';\r\n        expressionSpan.textContent = `Expression: ${calc.input}`;\r\n\r\n        const resultSpan = document.createElement('span');\r\n        resultSpan.className = 'result';\r\n        resultSpan.textContent = `Result: ${calc.result}`;\r\n\r\n        const deleteBtn = document.createElement('span');\r\n        deleteBtn.className = 'delete_btn';\r\n        deleteBtn.textContent = 'X';\r\n        deleteBtn.addEventListener('click', () => {\r\n            calculation.splice(index, 1);\r\n            localStorage.setItem('calculation', JSON.stringify(calculation));\r\n            updateHistoryList();\r\n        });\r\n\r\n        listItem.appendChild(expressionSpan);\r\n        listItem.appendChild(resultSpan);\r\n        listItem.appendChild(deleteBtn);\r\n\r\n        historyList.appendChild(listItem);\r\n    });\r\n}\r\n\r\nfunction handleButtonClick(event, inputField, outputField) {\r\n    const buttonText = event.target.textContent;\r\n\r\n    // Handle Clear (C)\r\n    if (buttonText === 'C') {\r\n        clearFields(inputField, outputField);\r\n        return;\r\n    }\r\n\r\n    // Handle Delete (del)\r\n    if (buttonText === 'del') {\r\n        deleteLastCharacter(inputField);\r\n        return;\r\n    }\r\n\r\n    // Handle Equal (=)\r\n    if (buttonText === '=') {\r\n        calculateResult(inputField, outputField);\r\n        return;\r\n    }\r\n\r\n    // Otherwise, add the clicked button's value to the input field\r\n    appendToInput(inputField, buttonText);\r\n}\r\n\r\nfunction calculate(input) {\r\n    input = input.replace(\"×\", '*');\r\n    input = input.replace(\"√\", 'sqrt');\r\n    input = input.replace(\"P\", 'permutations');\r\n    input = input.replace(\"C\", 'combinations');\r\n    input = input.replace(\"dy/dx\", 'derivative');\r\n    return math.evaluate(input);\r\n\r\n}\r\n\r\nfunction saveCalculation(str, result) {\r\n    newCalculation = {\r\n        input: str,\r\n        result: result\r\n    };\r\n\r\n    if (!calculation.some(cal => cal.input === str)) {\r\n        calculation.push(newCalculation);\r\n        localStorage.setItem('calculation', JSON.stringify(calculation));\r\n    }\r\n}\r\n\r\n\r\nfunction hasCalculation() {\r\n    return localStorage.getItem('calculation') !== null;\r\n}\r\n\r\nfunction clearFields(inputField, outputField) {\r\n    inputField.value = '';\r\n    outputField.value = '';\r\n}\r\n\r\nfunction deleteLastCharacter(inputField) {\r\n    inputField.value = inputField.value.slice(0, -1);\r\n}\r\n\r\nfunction appendToInput(inputField, text) {\r\n    inputField.value += text;\r\n}\r\n\r\nfunction calculateResult(inputField, outputField) {\r\n    try {\r\n        const result = calculate(inputField.value);\r\n        outputField.value = result;\r\n        saveCalculation(inputField.value, result);\r\n        eval(`boom()`);\r\n        updateHistoryList()\r\n    } catch (error) {\r\n        console.log(error);\r\n        outputField.value = 'Error';\r\n        eval(`sadboom()`);\r\n    }\r\n}\r\n\r\nfunction clearHistory() {\r\n    calculation = {};\r\n    localStorage.removeItem(\"calculation\");\r\n}\r\n\r\nfunction logHistory() {\r\n    console.log(JSON.parse(localStorage.getItem('calculation')));\r\n}\r\n\r\nwindow.logHistory = logHistory;\r\nwindow.clearHistory = clearHistory;"],"names":["$parcel$global","globalThis","self","window","global","$parcel$modules","$parcel$inits","parcelRequire","id","exports","init","module","call","err","Error","code","register","parcelRegister","calculation","localStorage","getItem","storedCalculation","JSON","parse","Array","isArray","newCalculation","updateHistoryList","historyList","document","getElementById","innerHTML","forEach","calc","index","listItem","createElement","expressionSpan","className","textContent","input","resultSpan","result","deleteBtn","addEventListener","splice","setItem","stringify","appendChild","handleButtonClick","event","inputField","outputField","buttonText","target","clearFields","deleteLastCharacter","calculateResult","appendToInput","calculate","replace","math","evaluate","saveCalculation","str","some","cal","push","hasCalculation","value","slice","text","eval","error","console","log","clearHistory","removeItem","logHistory","buttons","querySelectorAll","histbtn","advanceCal","advKeyHolder","histCloseBtn","historyHolder","style","display","body","scrollTop","documentElement","overflow","e","isRotated","rotation","transform","button"],"version":3,"file":"index.298a9512.js.map"}