{"mappings":"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","sources":["<anon>","src/script/animation.js","node_modules/js-confetti/dist/es/index.js"],"sourcesContent":["function $3e57d5442950c461$var$_classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n}\nfunction $3e57d5442950c461$var$_defineProperties(target, props) {\n    for(var i = 0; i < props.length; i++){\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction $3e57d5442950c461$var$_createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) $3e57d5442950c461$var$_defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) $3e57d5442950c461$var$_defineProperties(Constructor, staticProps);\n    return Constructor;\n}\nfunction $3e57d5442950c461$var$normalizeComputedStyleValue(string) {\n    // \"250px\" --> 250\n    return +string.replace(/px/, '');\n}\nfunction $3e57d5442950c461$var$fixDPR(canvas) {\n    var dpr = window.devicePixelRatio;\n    var computedStyles = getComputedStyle(canvas);\n    var width = $3e57d5442950c461$var$normalizeComputedStyleValue(computedStyles.getPropertyValue('width'));\n    var height = $3e57d5442950c461$var$normalizeComputedStyleValue(computedStyles.getPropertyValue('height'));\n    canvas.setAttribute('width', (width * dpr).toString());\n    canvas.setAttribute('height', (height * dpr).toString());\n}\nfunction $3e57d5442950c461$var$generateRandomNumber(min, max) {\n    var fractionDigits = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n    var randomNumber = Math.random() * (max - min) + min;\n    return Math.floor(randomNumber * Math.pow(10, fractionDigits)) / Math.pow(10, fractionDigits);\n}\nfunction $3e57d5442950c461$var$generateRandomArrayElement(arr) {\n    return arr[$3e57d5442950c461$var$generateRandomNumber(0, arr.length)];\n}\nvar $3e57d5442950c461$var$FREE_FALLING_OBJECT_ACCELERATION = 0.00125;\nvar $3e57d5442950c461$var$MIN_DRAG_FORCE_COEFFICIENT = 0.0005;\nvar $3e57d5442950c461$var$MAX_DRAG_FORCE_COEFFICIENT = 0.0009;\nvar $3e57d5442950c461$var$ROTATION_SLOWDOWN_ACCELERATION = 0.00001;\nvar $3e57d5442950c461$var$INITIAL_SHAPE_RADIUS = 6;\nvar $3e57d5442950c461$var$INITIAL_EMOJI_SIZE = 80;\nvar $3e57d5442950c461$var$MIN_INITIAL_CONFETTI_SPEED = 0.9;\nvar $3e57d5442950c461$var$MAX_INITIAL_CONFETTI_SPEED = 1.7;\nvar $3e57d5442950c461$var$MIN_FINAL_X_CONFETTI_SPEED = 0.2;\nvar $3e57d5442950c461$var$MAX_FINAL_X_CONFETTI_SPEED = 0.6;\nvar $3e57d5442950c461$var$MIN_INITIAL_ROTATION_SPEED = 0.03;\nvar $3e57d5442950c461$var$MAX_INITIAL_ROTATION_SPEED = 0.07;\nvar $3e57d5442950c461$var$MIN_CONFETTI_ANGLE = 15;\nvar $3e57d5442950c461$var$MAX_CONFETTI_ANGLE = 82;\nvar $3e57d5442950c461$var$MAX_CONFETTI_POSITION_SHIFT = 150;\nvar $3e57d5442950c461$var$SHAPE_VISIBILITY_TRESHOLD = 100;\nvar $3e57d5442950c461$var$DEFAULT_CONFETTI_NUMBER = 250;\nvar $3e57d5442950c461$var$DEFAULT_EMOJIS_NUMBER = 40;\nvar $3e57d5442950c461$var$DEFAULT_CONFETTI_COLORS = [\n    '#fcf403',\n    '#62fc03',\n    '#f4fc03',\n    '#03e7fc',\n    '#03fca5',\n    '#a503fc',\n    '#fc03ad',\n    '#fc03c2'\n];\nfunction $3e57d5442950c461$var$getWindowWidthCoefficient(canvasWidth) {\n    var HD_SCREEN_WIDTH = 1920;\n    return Math.log(canvasWidth) / Math.log(HD_SCREEN_WIDTH);\n}\nvar $3e57d5442950c461$var$ConfettiShape = /*#__PURE__*/ function() {\n    function ConfettiShape(args) {\n        $3e57d5442950c461$var$_classCallCheck(this, ConfettiShape);\n        var initialPosition = args.initialPosition, direction = args.direction, confettiRadius = args.confettiRadius, confettiColors = args.confettiColors, emojis = args.emojis, emojiSize = args.emojiSize, canvasWidth = args.canvasWidth;\n        var randomConfettiSpeed = $3e57d5442950c461$var$generateRandomNumber($3e57d5442950c461$var$MIN_INITIAL_CONFETTI_SPEED, $3e57d5442950c461$var$MAX_INITIAL_CONFETTI_SPEED, 3);\n        var initialSpeed = randomConfettiSpeed * $3e57d5442950c461$var$getWindowWidthCoefficient(canvasWidth);\n        this.confettiSpeed = {\n            x: initialSpeed,\n            y: initialSpeed\n        };\n        this.finalConfettiSpeedX = $3e57d5442950c461$var$generateRandomNumber($3e57d5442950c461$var$MIN_FINAL_X_CONFETTI_SPEED, $3e57d5442950c461$var$MAX_FINAL_X_CONFETTI_SPEED, 3);\n        this.rotationSpeed = emojis.length ? 0.01 : $3e57d5442950c461$var$generateRandomNumber($3e57d5442950c461$var$MIN_INITIAL_ROTATION_SPEED, $3e57d5442950c461$var$MAX_INITIAL_ROTATION_SPEED, 3) * $3e57d5442950c461$var$getWindowWidthCoefficient(canvasWidth);\n        this.dragForceCoefficient = $3e57d5442950c461$var$generateRandomNumber($3e57d5442950c461$var$MIN_DRAG_FORCE_COEFFICIENT, $3e57d5442950c461$var$MAX_DRAG_FORCE_COEFFICIENT, 6);\n        this.radius = {\n            x: confettiRadius,\n            y: confettiRadius\n        };\n        this.initialRadius = confettiRadius;\n        this.rotationAngle = direction === 'left' ? $3e57d5442950c461$var$generateRandomNumber(0, 0.2, 3) : $3e57d5442950c461$var$generateRandomNumber(-0.2, 0, 3);\n        this.emojiSize = emojiSize;\n        this.emojiRotationAngle = $3e57d5442950c461$var$generateRandomNumber(0, 2 * Math.PI);\n        this.radiusYUpdateDirection = 'down';\n        var angle = direction === 'left' ? $3e57d5442950c461$var$generateRandomNumber($3e57d5442950c461$var$MAX_CONFETTI_ANGLE, $3e57d5442950c461$var$MIN_CONFETTI_ANGLE) * Math.PI / 180 : $3e57d5442950c461$var$generateRandomNumber(-$3e57d5442950c461$var$MIN_CONFETTI_ANGLE, -$3e57d5442950c461$var$MAX_CONFETTI_ANGLE) * Math.PI / 180;\n        this.absCos = Math.abs(Math.cos(angle));\n        this.absSin = Math.abs(Math.sin(angle));\n        var positionShift = $3e57d5442950c461$var$generateRandomNumber(-$3e57d5442950c461$var$MAX_CONFETTI_POSITION_SHIFT, 0);\n        var shiftedInitialPosition = {\n            x: initialPosition.x + (direction === 'left' ? -positionShift : positionShift) * this.absCos,\n            y: initialPosition.y - positionShift * this.absSin\n        };\n        this.currentPosition = Object.assign({}, shiftedInitialPosition);\n        this.initialPosition = Object.assign({}, shiftedInitialPosition);\n        this.color = emojis.length ? null : $3e57d5442950c461$var$generateRandomArrayElement(confettiColors);\n        this.emoji = emojis.length ? $3e57d5442950c461$var$generateRandomArrayElement(emojis) : null;\n        this.createdAt = new Date().getTime();\n        this.direction = direction;\n    }\n    $3e57d5442950c461$var$_createClass(ConfettiShape, [\n        {\n            key: \"draw\",\n            value: function draw(canvasContext) {\n                var currentPosition = this.currentPosition, radius = this.radius, color = this.color, emoji = this.emoji, rotationAngle = this.rotationAngle, emojiRotationAngle = this.emojiRotationAngle, emojiSize = this.emojiSize;\n                var dpr = window.devicePixelRatio;\n                if (color) {\n                    canvasContext.fillStyle = color;\n                    canvasContext.beginPath();\n                    canvasContext.ellipse(currentPosition.x * dpr, currentPosition.y * dpr, radius.x * dpr, radius.y * dpr, rotationAngle, 0, 2 * Math.PI);\n                    canvasContext.fill();\n                } else if (emoji) {\n                    canvasContext.font = \"\".concat(emojiSize, \"px serif\");\n                    canvasContext.save();\n                    canvasContext.translate(dpr * currentPosition.x, dpr * currentPosition.y);\n                    canvasContext.rotate(emojiRotationAngle);\n                    canvasContext.textAlign = 'center';\n                    canvasContext.fillText(emoji, 0, 0);\n                    canvasContext.restore();\n                }\n            }\n        },\n        {\n            key: \"updatePosition\",\n            value: function updatePosition(iterationTimeDelta, currentTime) {\n                var confettiSpeed = this.confettiSpeed, dragForceCoefficient = this.dragForceCoefficient, finalConfettiSpeedX = this.finalConfettiSpeedX, radiusYUpdateDirection = this.radiusYUpdateDirection, rotationSpeed = this.rotationSpeed, createdAt = this.createdAt, direction = this.direction;\n                var timeDeltaSinceCreation = currentTime - createdAt;\n                if (confettiSpeed.x > finalConfettiSpeedX) this.confettiSpeed.x -= dragForceCoefficient * iterationTimeDelta;\n                this.currentPosition.x += confettiSpeed.x * (direction === 'left' ? -this.absCos : this.absCos) * iterationTimeDelta;\n                this.currentPosition.y = this.initialPosition.y - confettiSpeed.y * this.absSin * timeDeltaSinceCreation + $3e57d5442950c461$var$FREE_FALLING_OBJECT_ACCELERATION * Math.pow(timeDeltaSinceCreation, 2) / 2;\n                this.rotationSpeed -= this.emoji ? 0.0001 : $3e57d5442950c461$var$ROTATION_SLOWDOWN_ACCELERATION * iterationTimeDelta;\n                if (this.rotationSpeed < 0) this.rotationSpeed = 0; // no need to update rotation radius for emoji\n                if (this.emoji) {\n                    this.emojiRotationAngle += this.rotationSpeed * iterationTimeDelta % (2 * Math.PI);\n                    return;\n                }\n                if (radiusYUpdateDirection === 'down') {\n                    this.radius.y -= iterationTimeDelta * rotationSpeed;\n                    if (this.radius.y <= 0) {\n                        this.radius.y = 0;\n                        this.radiusYUpdateDirection = 'up';\n                    }\n                } else {\n                    this.radius.y += iterationTimeDelta * rotationSpeed;\n                    if (this.radius.y >= this.initialRadius) {\n                        this.radius.y = this.initialRadius;\n                        this.radiusYUpdateDirection = 'down';\n                    }\n                }\n            }\n        },\n        {\n            key: \"getIsVisibleOnCanvas\",\n            value: function getIsVisibleOnCanvas(canvasHeight) {\n                return this.currentPosition.y < canvasHeight + $3e57d5442950c461$var$SHAPE_VISIBILITY_TRESHOLD;\n            }\n        }\n    ]);\n    return ConfettiShape;\n}();\nfunction $3e57d5442950c461$var$createCanvas() {\n    var canvas = document.createElement('canvas');\n    canvas.style.position = 'fixed';\n    canvas.style.width = '100%';\n    canvas.style.height = '100%';\n    canvas.style.top = '0';\n    canvas.style.left = '0';\n    canvas.style.zIndex = '1000';\n    canvas.style.pointerEvents = 'none';\n    document.body.appendChild(canvas);\n    return canvas;\n}\nfunction $3e57d5442950c461$var$normalizeConfettiConfig(confettiConfig) {\n    var _confettiConfig$confe = confettiConfig.confettiRadius, confettiRadius = _confettiConfig$confe === void 0 ? $3e57d5442950c461$var$INITIAL_SHAPE_RADIUS : _confettiConfig$confe, _confettiConfig$confe2 = confettiConfig.confettiNumber, confettiNumber = _confettiConfig$confe2 === void 0 ? confettiConfig.confettiesNumber || (confettiConfig.emojis ? $3e57d5442950c461$var$DEFAULT_EMOJIS_NUMBER : $3e57d5442950c461$var$DEFAULT_CONFETTI_NUMBER) : _confettiConfig$confe2, _confettiConfig$confe3 = confettiConfig.confettiColors, confettiColors = _confettiConfig$confe3 === void 0 ? $3e57d5442950c461$var$DEFAULT_CONFETTI_COLORS : _confettiConfig$confe3, _confettiConfig$emoji = confettiConfig.emojis, emojis = _confettiConfig$emoji === void 0 ? confettiConfig.emojies || [] : _confettiConfig$emoji, _confettiConfig$emoji2 = confettiConfig.emojiSize, emojiSize = _confettiConfig$emoji2 === void 0 ? $3e57d5442950c461$var$INITIAL_EMOJI_SIZE : _confettiConfig$emoji2; // deprecate wrong plural forms, used in early releases\n    if (confettiConfig.emojies) console.error(\"emojies argument is deprecated, please use emojis instead\");\n    if (confettiConfig.confettiesNumber) console.error(\"confettiesNumber argument is deprecated, please use confettiNumber instead\");\n    return {\n        confettiRadius: confettiRadius,\n        confettiNumber: confettiNumber,\n        confettiColors: confettiColors,\n        emojis: emojis,\n        emojiSize: emojiSize\n    };\n}\nvar $3e57d5442950c461$var$ConfettiBatch = /*#__PURE__*/ function() {\n    function ConfettiBatch(canvasContext) {\n        var _this = this;\n        $3e57d5442950c461$var$_classCallCheck(this, ConfettiBatch);\n        this.canvasContext = canvasContext;\n        this.shapes = [];\n        this.promise = new Promise(function(completionCallback) {\n            return _this.resolvePromise = completionCallback;\n        });\n    }\n    $3e57d5442950c461$var$_createClass(ConfettiBatch, [\n        {\n            key: \"getBatchCompletePromise\",\n            value: function getBatchCompletePromise() {\n                return this.promise;\n            }\n        },\n        {\n            key: \"addShapes\",\n            value: function addShapes() {\n                var _this$shapes;\n                (_this$shapes = this.shapes).push.apply(_this$shapes, arguments);\n            }\n        },\n        {\n            key: \"complete\",\n            value: function complete() {\n                var _a;\n                if (this.shapes.length) return false;\n                (_a = this.resolvePromise) === null || _a === void 0 || _a.call(this);\n                return true;\n            }\n        },\n        {\n            key: \"processShapes\",\n            value: function processShapes(time, canvasHeight, cleanupInvisibleShapes) {\n                var _this2 = this;\n                var timeDelta = time.timeDelta, currentTime = time.currentTime;\n                this.shapes = this.shapes.filter(function(shape) {\n                    // Render the shapes in this batch\n                    shape.updatePosition(timeDelta, currentTime);\n                    shape.draw(_this2.canvasContext); // Only cleanup the shapes if we're being asked to\n                    if (!cleanupInvisibleShapes) return true;\n                    return shape.getIsVisibleOnCanvas(canvasHeight);\n                });\n            }\n        }\n    ]);\n    return ConfettiBatch;\n}();\nvar $3e57d5442950c461$var$JSConfetti = /*#__PURE__*/ function() {\n    function JSConfetti() {\n        var jsConfettiConfig = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n        $3e57d5442950c461$var$_classCallCheck(this, JSConfetti);\n        this.activeConfettiBatches = [];\n        this.canvas = jsConfettiConfig.canvas || $3e57d5442950c461$var$createCanvas();\n        this.canvasContext = this.canvas.getContext('2d');\n        this.requestAnimationFrameRequested = false;\n        this.lastUpdated = new Date().getTime();\n        this.iterationIndex = 0;\n        this.loop = this.loop.bind(this);\n        requestAnimationFrame(this.loop);\n    }\n    $3e57d5442950c461$var$_createClass(JSConfetti, [\n        {\n            key: \"loop\",\n            value: function loop() {\n                this.requestAnimationFrameRequested = false;\n                $3e57d5442950c461$var$fixDPR(this.canvas);\n                var currentTime = new Date().getTime();\n                var timeDelta = currentTime - this.lastUpdated;\n                var canvasHeight = this.canvas.offsetHeight;\n                var cleanupInvisibleShapes = this.iterationIndex % 10 === 0;\n                this.activeConfettiBatches = this.activeConfettiBatches.filter(function(batch) {\n                    batch.processShapes({\n                        timeDelta: timeDelta,\n                        currentTime: currentTime\n                    }, canvasHeight, cleanupInvisibleShapes); // Do not remove invisible shapes on every iteration\n                    if (!cleanupInvisibleShapes) return true;\n                    return !batch.complete();\n                });\n                this.iterationIndex++;\n                this.queueAnimationFrameIfNeeded(currentTime);\n            }\n        },\n        {\n            key: \"queueAnimationFrameIfNeeded\",\n            value: function queueAnimationFrameIfNeeded(currentTime) {\n                if (this.requestAnimationFrameRequested) // We already have a pended animation frame, so there is no more work\n                return;\n                if (this.activeConfettiBatches.length < 1) // No shapes to animate, so don't queue another frame\n                return;\n                this.requestAnimationFrameRequested = true; // Capture the last updated time for animation\n                this.lastUpdated = currentTime || new Date().getTime();\n                requestAnimationFrame(this.loop);\n            }\n        },\n        {\n            key: \"addConfetti\",\n            value: function addConfetti() {\n                var confettiConfig = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n                var _normalizeConfettiCon = $3e57d5442950c461$var$normalizeConfettiConfig(confettiConfig), confettiRadius = _normalizeConfettiCon.confettiRadius, confettiNumber = _normalizeConfettiCon.confettiNumber, confettiColors = _normalizeConfettiCon.confettiColors, emojis = _normalizeConfettiCon.emojis, emojiSize = _normalizeConfettiCon.emojiSize; // Use the bounding rect rather tahn the canvas width / height, because\n                // .width / .height are unset until a layout pass has been completed. Upon\n                // confetti being immediately queued on a page load, this hasn't happened so\n                // the default of 300x150 will be returned, causing an improper source point\n                // for the confetti animation.\n                var canvasRect = this.canvas.getBoundingClientRect();\n                var canvasWidth = canvasRect.width;\n                var canvasHeight = canvasRect.height;\n                var yPosition = canvasHeight * 5 / 7;\n                var leftConfettiPosition = {\n                    x: 0,\n                    y: yPosition\n                };\n                var rightConfettiPosition = {\n                    x: canvasWidth,\n                    y: yPosition\n                };\n                var confettiGroup = new $3e57d5442950c461$var$ConfettiBatch(this.canvasContext);\n                for(var i = 0; i < confettiNumber / 2; i++){\n                    var confettiOnTheRight = new $3e57d5442950c461$var$ConfettiShape({\n                        initialPosition: leftConfettiPosition,\n                        direction: 'right',\n                        confettiRadius: confettiRadius,\n                        confettiColors: confettiColors,\n                        confettiNumber: confettiNumber,\n                        emojis: emojis,\n                        emojiSize: emojiSize,\n                        canvasWidth: canvasWidth\n                    });\n                    var confettiOnTheLeft = new $3e57d5442950c461$var$ConfettiShape({\n                        initialPosition: rightConfettiPosition,\n                        direction: 'left',\n                        confettiRadius: confettiRadius,\n                        confettiColors: confettiColors,\n                        confettiNumber: confettiNumber,\n                        emojis: emojis,\n                        emojiSize: emojiSize,\n                        canvasWidth: canvasWidth\n                    });\n                    confettiGroup.addShapes(confettiOnTheRight, confettiOnTheLeft);\n                }\n                this.activeConfettiBatches.push(confettiGroup);\n                this.queueAnimationFrameIfNeeded();\n                return confettiGroup.getBatchCompletePromise();\n            }\n        },\n        {\n            key: \"clearCanvas\",\n            value: function clearCanvas() {\n                this.activeConfettiBatches = [];\n            }\n        },\n        {\n            key: \"destroyCanvas\",\n            value: function destroyCanvas() {\n                this.canvas.remove();\n            }\n        }\n    ]);\n    return JSConfetti;\n}();\nvar $3e57d5442950c461$export$2e2bcd8739ae039 = $3e57d5442950c461$var$JSConfetti;\n\n\ndocument.addEventListener('DOMContentLoaded', ()=>{\n    const canvas = document.getElementById('bob');\n    const jsConfetti = new (0, $3e57d5442950c461$export$2e2bcd8739ae039)({\n        canvas: canvas\n    });\n    function boom() {\n        jsConfetti.addConfetti({\n            confettiColors: [\n                '#ffa500'\n            ],\n            confettiRadius: 10,\n            confettiNumber: 100\n        });\n    }\n    function sadboom() {\n        jsConfetti.addConfetti({\n            emojis: [\n                \"\\uD83D\\uDEAB\"\n            ],\n            emojiSize: 50,\n            confettiNumber: 15\n        });\n    }\n    window.boom = boom;\n    window.sadboom = sadboom;\n    const spans = document.querySelectorAll('.special');\n    spans.forEach((span, index)=>{\n        const delay = index * 500; // 500ms delay between each element\n        span.style.animation = `rotate 4s linear infinite`;\n        span.style.animationDelay = `${delay}ms`;\n    });\n});\n\n\n//# sourceMappingURL=index.69d0eb4b.js.map\n","import JSConfetti from 'js-confetti';\r\n\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n    \r\n\r\n    const canvas = document.getElementById('bob')\r\n    const jsConfetti = new JSConfetti({ canvas })\r\n\r\n    function boom() {\r\n        jsConfetti.addConfetti({\r\n            confettiColors: [\r\n                '#ffa500'\r\n            ],\r\n            confettiRadius: 10,\r\n            confettiNumber: 100,\r\n        })\r\n    }\r\n\r\n    function sadboom() {\r\n        jsConfetti.addConfetti({\r\n            emojis: [\r\n                \"🚫\",\r\n            ],\r\n            emojiSize: 50,\r\n            confettiNumber: 15,\r\n        })\r\n    }\r\n\r\n    window.boom = boom;\r\n    window.sadboom = sadboom;\r\n    \r\n    const spans = document.querySelectorAll('.special');\r\n    spans.forEach((span, index) => {\r\n        const delay = index * 500; // 500ms delay between each element\r\n        span.style.animation = `rotate 4s linear infinite`;\r\n        span.style.animationDelay = `${delay}ms`;\r\n    })\r\n})\r\n\r\n","function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction normalizeComputedStyleValue(string) {\n  // \"250px\" --> 250\n  return +string.replace(/px/, '');\n}\n\nfunction fixDPR(canvas) {\n  var dpr = window.devicePixelRatio;\n  var computedStyles = getComputedStyle(canvas);\n  var width = normalizeComputedStyleValue(computedStyles.getPropertyValue('width'));\n  var height = normalizeComputedStyleValue(computedStyles.getPropertyValue('height'));\n  canvas.setAttribute('width', (width * dpr).toString());\n  canvas.setAttribute('height', (height * dpr).toString());\n}\n\nfunction generateRandomNumber(min, max) {\n  var fractionDigits = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n  var randomNumber = Math.random() * (max - min) + min;\n  return Math.floor(randomNumber * Math.pow(10, fractionDigits)) / Math.pow(10, fractionDigits);\n}\n\nfunction generateRandomArrayElement(arr) {\n  return arr[generateRandomNumber(0, arr.length)];\n}\n\nvar FREE_FALLING_OBJECT_ACCELERATION = 0.00125;\nvar MIN_DRAG_FORCE_COEFFICIENT = 0.0005;\nvar MAX_DRAG_FORCE_COEFFICIENT = 0.0009;\nvar ROTATION_SLOWDOWN_ACCELERATION = 0.00001;\nvar INITIAL_SHAPE_RADIUS = 6;\nvar INITIAL_EMOJI_SIZE = 80;\nvar MIN_INITIAL_CONFETTI_SPEED = 0.9;\nvar MAX_INITIAL_CONFETTI_SPEED = 1.7;\nvar MIN_FINAL_X_CONFETTI_SPEED = 0.2;\nvar MAX_FINAL_X_CONFETTI_SPEED = 0.6;\nvar MIN_INITIAL_ROTATION_SPEED = 0.03;\nvar MAX_INITIAL_ROTATION_SPEED = 0.07;\nvar MIN_CONFETTI_ANGLE = 15;\nvar MAX_CONFETTI_ANGLE = 82;\nvar MAX_CONFETTI_POSITION_SHIFT = 150;\nvar SHAPE_VISIBILITY_TRESHOLD = 100;\nvar DEFAULT_CONFETTI_NUMBER = 250;\nvar DEFAULT_EMOJIS_NUMBER = 40;\nvar DEFAULT_CONFETTI_COLORS = ['#fcf403', '#62fc03', '#f4fc03', '#03e7fc', '#03fca5', '#a503fc', '#fc03ad', '#fc03c2'];\n\nfunction getWindowWidthCoefficient(canvasWidth) {\n  var HD_SCREEN_WIDTH = 1920;\n  return Math.log(canvasWidth) / Math.log(HD_SCREEN_WIDTH);\n}\n\nvar ConfettiShape = /*#__PURE__*/function () {\n  function ConfettiShape(args) {\n    _classCallCheck(this, ConfettiShape);\n\n    var initialPosition = args.initialPosition,\n        direction = args.direction,\n        confettiRadius = args.confettiRadius,\n        confettiColors = args.confettiColors,\n        emojis = args.emojis,\n        emojiSize = args.emojiSize,\n        canvasWidth = args.canvasWidth;\n    var randomConfettiSpeed = generateRandomNumber(MIN_INITIAL_CONFETTI_SPEED, MAX_INITIAL_CONFETTI_SPEED, 3);\n    var initialSpeed = randomConfettiSpeed * getWindowWidthCoefficient(canvasWidth);\n    this.confettiSpeed = {\n      x: initialSpeed,\n      y: initialSpeed\n    };\n    this.finalConfettiSpeedX = generateRandomNumber(MIN_FINAL_X_CONFETTI_SPEED, MAX_FINAL_X_CONFETTI_SPEED, 3);\n    this.rotationSpeed = emojis.length ? 0.01 : generateRandomNumber(MIN_INITIAL_ROTATION_SPEED, MAX_INITIAL_ROTATION_SPEED, 3) * getWindowWidthCoefficient(canvasWidth);\n    this.dragForceCoefficient = generateRandomNumber(MIN_DRAG_FORCE_COEFFICIENT, MAX_DRAG_FORCE_COEFFICIENT, 6);\n    this.radius = {\n      x: confettiRadius,\n      y: confettiRadius\n    };\n    this.initialRadius = confettiRadius;\n    this.rotationAngle = direction === 'left' ? generateRandomNumber(0, 0.2, 3) : generateRandomNumber(-0.2, 0, 3);\n    this.emojiSize = emojiSize;\n    this.emojiRotationAngle = generateRandomNumber(0, 2 * Math.PI);\n    this.radiusYUpdateDirection = 'down';\n    var angle = direction === 'left' ? generateRandomNumber(MAX_CONFETTI_ANGLE, MIN_CONFETTI_ANGLE) * Math.PI / 180 : generateRandomNumber(-MIN_CONFETTI_ANGLE, -MAX_CONFETTI_ANGLE) * Math.PI / 180;\n    this.absCos = Math.abs(Math.cos(angle));\n    this.absSin = Math.abs(Math.sin(angle));\n    var positionShift = generateRandomNumber(-MAX_CONFETTI_POSITION_SHIFT, 0);\n    var shiftedInitialPosition = {\n      x: initialPosition.x + (direction === 'left' ? -positionShift : positionShift) * this.absCos,\n      y: initialPosition.y - positionShift * this.absSin\n    };\n    this.currentPosition = Object.assign({}, shiftedInitialPosition);\n    this.initialPosition = Object.assign({}, shiftedInitialPosition);\n    this.color = emojis.length ? null : generateRandomArrayElement(confettiColors);\n    this.emoji = emojis.length ? generateRandomArrayElement(emojis) : null;\n    this.createdAt = new Date().getTime();\n    this.direction = direction;\n  }\n\n  _createClass(ConfettiShape, [{\n    key: \"draw\",\n    value: function draw(canvasContext) {\n      var currentPosition = this.currentPosition,\n          radius = this.radius,\n          color = this.color,\n          emoji = this.emoji,\n          rotationAngle = this.rotationAngle,\n          emojiRotationAngle = this.emojiRotationAngle,\n          emojiSize = this.emojiSize;\n      var dpr = window.devicePixelRatio;\n\n      if (color) {\n        canvasContext.fillStyle = color;\n        canvasContext.beginPath();\n        canvasContext.ellipse(currentPosition.x * dpr, currentPosition.y * dpr, radius.x * dpr, radius.y * dpr, rotationAngle, 0, 2 * Math.PI);\n        canvasContext.fill();\n      } else if (emoji) {\n        canvasContext.font = \"\".concat(emojiSize, \"px serif\");\n        canvasContext.save();\n        canvasContext.translate(dpr * currentPosition.x, dpr * currentPosition.y);\n        canvasContext.rotate(emojiRotationAngle);\n        canvasContext.textAlign = 'center';\n        canvasContext.fillText(emoji, 0, 0);\n        canvasContext.restore();\n      }\n    }\n  }, {\n    key: \"updatePosition\",\n    value: function updatePosition(iterationTimeDelta, currentTime) {\n      var confettiSpeed = this.confettiSpeed,\n          dragForceCoefficient = this.dragForceCoefficient,\n          finalConfettiSpeedX = this.finalConfettiSpeedX,\n          radiusYUpdateDirection = this.radiusYUpdateDirection,\n          rotationSpeed = this.rotationSpeed,\n          createdAt = this.createdAt,\n          direction = this.direction;\n      var timeDeltaSinceCreation = currentTime - createdAt;\n      if (confettiSpeed.x > finalConfettiSpeedX) this.confettiSpeed.x -= dragForceCoefficient * iterationTimeDelta;\n      this.currentPosition.x += confettiSpeed.x * (direction === 'left' ? -this.absCos : this.absCos) * iterationTimeDelta;\n      this.currentPosition.y = this.initialPosition.y - confettiSpeed.y * this.absSin * timeDeltaSinceCreation + FREE_FALLING_OBJECT_ACCELERATION * Math.pow(timeDeltaSinceCreation, 2) / 2;\n      this.rotationSpeed -= this.emoji ? 0.0001 : ROTATION_SLOWDOWN_ACCELERATION * iterationTimeDelta;\n      if (this.rotationSpeed < 0) this.rotationSpeed = 0; // no need to update rotation radius for emoji\n\n      if (this.emoji) {\n        this.emojiRotationAngle += this.rotationSpeed * iterationTimeDelta % (2 * Math.PI);\n        return;\n      }\n\n      if (radiusYUpdateDirection === 'down') {\n        this.radius.y -= iterationTimeDelta * rotationSpeed;\n\n        if (this.radius.y <= 0) {\n          this.radius.y = 0;\n          this.radiusYUpdateDirection = 'up';\n        }\n      } else {\n        this.radius.y += iterationTimeDelta * rotationSpeed;\n\n        if (this.radius.y >= this.initialRadius) {\n          this.radius.y = this.initialRadius;\n          this.radiusYUpdateDirection = 'down';\n        }\n      }\n    }\n  }, {\n    key: \"getIsVisibleOnCanvas\",\n    value: function getIsVisibleOnCanvas(canvasHeight) {\n      return this.currentPosition.y < canvasHeight + SHAPE_VISIBILITY_TRESHOLD;\n    }\n  }]);\n\n  return ConfettiShape;\n}();\n\nfunction createCanvas() {\n  var canvas = document.createElement('canvas');\n  canvas.style.position = 'fixed';\n  canvas.style.width = '100%';\n  canvas.style.height = '100%';\n  canvas.style.top = '0';\n  canvas.style.left = '0';\n  canvas.style.zIndex = '1000';\n  canvas.style.pointerEvents = 'none';\n  document.body.appendChild(canvas);\n  return canvas;\n}\n\nfunction normalizeConfettiConfig(confettiConfig) {\n  var _confettiConfig$confe = confettiConfig.confettiRadius,\n      confettiRadius = _confettiConfig$confe === void 0 ? INITIAL_SHAPE_RADIUS : _confettiConfig$confe,\n      _confettiConfig$confe2 = confettiConfig.confettiNumber,\n      confettiNumber = _confettiConfig$confe2 === void 0 ? confettiConfig.confettiesNumber || (confettiConfig.emojis ? DEFAULT_EMOJIS_NUMBER : DEFAULT_CONFETTI_NUMBER) : _confettiConfig$confe2,\n      _confettiConfig$confe3 = confettiConfig.confettiColors,\n      confettiColors = _confettiConfig$confe3 === void 0 ? DEFAULT_CONFETTI_COLORS : _confettiConfig$confe3,\n      _confettiConfig$emoji = confettiConfig.emojis,\n      emojis = _confettiConfig$emoji === void 0 ? confettiConfig.emojies || [] : _confettiConfig$emoji,\n      _confettiConfig$emoji2 = confettiConfig.emojiSize,\n      emojiSize = _confettiConfig$emoji2 === void 0 ? INITIAL_EMOJI_SIZE : _confettiConfig$emoji2; // deprecate wrong plural forms, used in early releases\n\n  if (confettiConfig.emojies) console.error(\"emojies argument is deprecated, please use emojis instead\");\n  if (confettiConfig.confettiesNumber) console.error(\"confettiesNumber argument is deprecated, please use confettiNumber instead\");\n  return {\n    confettiRadius: confettiRadius,\n    confettiNumber: confettiNumber,\n    confettiColors: confettiColors,\n    emojis: emojis,\n    emojiSize: emojiSize\n  };\n}\n\nvar ConfettiBatch = /*#__PURE__*/function () {\n  function ConfettiBatch(canvasContext) {\n    var _this = this;\n\n    _classCallCheck(this, ConfettiBatch);\n\n    this.canvasContext = canvasContext;\n    this.shapes = [];\n    this.promise = new Promise(function (completionCallback) {\n      return _this.resolvePromise = completionCallback;\n    });\n  }\n\n  _createClass(ConfettiBatch, [{\n    key: \"getBatchCompletePromise\",\n    value: function getBatchCompletePromise() {\n      return this.promise;\n    }\n  }, {\n    key: \"addShapes\",\n    value: function addShapes() {\n      var _this$shapes;\n\n      (_this$shapes = this.shapes).push.apply(_this$shapes, arguments);\n    }\n  }, {\n    key: \"complete\",\n    value: function complete() {\n      var _a;\n\n      if (this.shapes.length) {\n        return false;\n      }\n\n      (_a = this.resolvePromise) === null || _a === void 0 ? void 0 : _a.call(this);\n      return true;\n    }\n  }, {\n    key: \"processShapes\",\n    value: function processShapes(time, canvasHeight, cleanupInvisibleShapes) {\n      var _this2 = this;\n\n      var timeDelta = time.timeDelta,\n          currentTime = time.currentTime;\n      this.shapes = this.shapes.filter(function (shape) {\n        // Render the shapes in this batch\n        shape.updatePosition(timeDelta, currentTime);\n        shape.draw(_this2.canvasContext); // Only cleanup the shapes if we're being asked to\n\n        if (!cleanupInvisibleShapes) {\n          return true;\n        }\n\n        return shape.getIsVisibleOnCanvas(canvasHeight);\n      });\n    }\n  }]);\n\n  return ConfettiBatch;\n}();\n\nvar JSConfetti = /*#__PURE__*/function () {\n  function JSConfetti() {\n    var jsConfettiConfig = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, JSConfetti);\n\n    this.activeConfettiBatches = [];\n    this.canvas = jsConfettiConfig.canvas || createCanvas();\n    this.canvasContext = this.canvas.getContext('2d');\n    this.requestAnimationFrameRequested = false;\n    this.lastUpdated = new Date().getTime();\n    this.iterationIndex = 0;\n    this.loop = this.loop.bind(this);\n    requestAnimationFrame(this.loop);\n  }\n\n  _createClass(JSConfetti, [{\n    key: \"loop\",\n    value: function loop() {\n      this.requestAnimationFrameRequested = false;\n      fixDPR(this.canvas);\n      var currentTime = new Date().getTime();\n      var timeDelta = currentTime - this.lastUpdated;\n      var canvasHeight = this.canvas.offsetHeight;\n      var cleanupInvisibleShapes = this.iterationIndex % 10 === 0;\n      this.activeConfettiBatches = this.activeConfettiBatches.filter(function (batch) {\n        batch.processShapes({\n          timeDelta: timeDelta,\n          currentTime: currentTime\n        }, canvasHeight, cleanupInvisibleShapes); // Do not remove invisible shapes on every iteration\n\n        if (!cleanupInvisibleShapes) {\n          return true;\n        }\n\n        return !batch.complete();\n      });\n      this.iterationIndex++;\n      this.queueAnimationFrameIfNeeded(currentTime);\n    }\n  }, {\n    key: \"queueAnimationFrameIfNeeded\",\n    value: function queueAnimationFrameIfNeeded(currentTime) {\n      if (this.requestAnimationFrameRequested) {\n        // We already have a pended animation frame, so there is no more work\n        return;\n      }\n\n      if (this.activeConfettiBatches.length < 1) {\n        // No shapes to animate, so don't queue another frame\n        return;\n      }\n\n      this.requestAnimationFrameRequested = true; // Capture the last updated time for animation\n\n      this.lastUpdated = currentTime || new Date().getTime();\n      requestAnimationFrame(this.loop);\n    }\n  }, {\n    key: \"addConfetti\",\n    value: function addConfetti() {\n      var confettiConfig = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n      var _normalizeConfettiCon = normalizeConfettiConfig(confettiConfig),\n          confettiRadius = _normalizeConfettiCon.confettiRadius,\n          confettiNumber = _normalizeConfettiCon.confettiNumber,\n          confettiColors = _normalizeConfettiCon.confettiColors,\n          emojis = _normalizeConfettiCon.emojis,\n          emojiSize = _normalizeConfettiCon.emojiSize; // Use the bounding rect rather tahn the canvas width / height, because\n      // .width / .height are unset until a layout pass has been completed. Upon\n      // confetti being immediately queued on a page load, this hasn't happened so\n      // the default of 300x150 will be returned, causing an improper source point\n      // for the confetti animation.\n\n\n      var canvasRect = this.canvas.getBoundingClientRect();\n      var canvasWidth = canvasRect.width;\n      var canvasHeight = canvasRect.height;\n      var yPosition = canvasHeight * 5 / 7;\n      var leftConfettiPosition = {\n        x: 0,\n        y: yPosition\n      };\n      var rightConfettiPosition = {\n        x: canvasWidth,\n        y: yPosition\n      };\n      var confettiGroup = new ConfettiBatch(this.canvasContext);\n\n      for (var i = 0; i < confettiNumber / 2; i++) {\n        var confettiOnTheRight = new ConfettiShape({\n          initialPosition: leftConfettiPosition,\n          direction: 'right',\n          confettiRadius: confettiRadius,\n          confettiColors: confettiColors,\n          confettiNumber: confettiNumber,\n          emojis: emojis,\n          emojiSize: emojiSize,\n          canvasWidth: canvasWidth\n        });\n        var confettiOnTheLeft = new ConfettiShape({\n          initialPosition: rightConfettiPosition,\n          direction: 'left',\n          confettiRadius: confettiRadius,\n          confettiColors: confettiColors,\n          confettiNumber: confettiNumber,\n          emojis: emojis,\n          emojiSize: emojiSize,\n          canvasWidth: canvasWidth\n        });\n        confettiGroup.addShapes(confettiOnTheRight, confettiOnTheLeft);\n      }\n\n      this.activeConfettiBatches.push(confettiGroup);\n      this.queueAnimationFrameIfNeeded();\n      return confettiGroup.getBatchCompletePromise();\n    }\n  }, {\n    key: \"clearCanvas\",\n    value: function clearCanvas() {\n      this.activeConfettiBatches = [];\n    }\n  }, {\n    key: \"destroyCanvas\",\n    value: function destroyCanvas() {\n      this.canvas.remove();\n    }\n  }]);\n\n  return JSConfetti;\n}();\n\nexport default JSConfetti;\n"],"names":["$3e57d5442950c461$var$_classCallCheck","instance","Constructor","TypeError","$3e57d5442950c461$var$_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","$3e57d5442950c461$var$_createClass","protoProps","staticProps","prototype","$3e57d5442950c461$var$normalizeComputedStyleValue","string","replace","$3e57d5442950c461$var$generateRandomNumber","min","max","fractionDigits","arguments","undefined","Math","floor","randomNumber","random","pow","$3e57d5442950c461$var$generateRandomArrayElement","arr","$3e57d5442950c461$var$DEFAULT_CONFETTI_COLORS","$3e57d5442950c461$var$getWindowWidthCoefficient","canvasWidth","log","$3e57d5442950c461$var$ConfettiShape","ConfettiShape","args","initialPosition","direction","confettiRadius","confettiColors","emojis","emojiSize","initialSpeed","randomConfettiSpeed","confettiSpeed","x","y","finalConfettiSpeedX","rotationSpeed","dragForceCoefficient","radius","initialRadius","rotationAngle","emojiRotationAngle","PI","radiusYUpdateDirection","angle","absCos","abs","cos","absSin","sin","positionShift","shiftedInitialPosition","currentPosition","assign","color","emoji","createdAt","Date","getTime","value","canvasContext","dpr","window","devicePixelRatio","fillStyle","beginPath","ellipse","fill","font","concat","save","translate","rotate","textAlign","fillText","restore","iterationTimeDelta","currentTime","timeDeltaSinceCreation","$3e57d5442950c461$var$FREE_FALLING_OBJECT_ACCELERATION","$3e57d5442950c461$var$ROTATION_SLOWDOWN_ACCELERATION","canvasHeight","$3e57d5442950c461$var$ConfettiBatch","ConfettiBatch","_this","shapes","promise","Promise","completionCallback","resolvePromise","_this$shapes","push","apply","_a","call","time","cleanupInvisibleShapes","_this2","timeDelta","filter","shape","updatePosition","draw","getIsVisibleOnCanvas","$3e57d5442950c461$var$JSConfetti","JSConfetti","canvas","jsConfettiConfig","activeConfettiBatches","document","createElement","style","position","width","height","top","left","zIndex","pointerEvents","body","appendChild","getContext","requestAnimationFrameRequested","lastUpdated","iterationIndex","loop","bind","requestAnimationFrame","computedStyles","getComputedStyle","getPropertyValue","setAttribute","toString","offsetHeight","batch","processShapes","complete","queueAnimationFrameIfNeeded","_confettiConfig$confe","_confettiConfig$confe2","confettiNumber","_confettiConfig$confe3","_confettiConfig$emoji","_confettiConfig$emoji2","confettiConfig","_normalizeConfettiCon","confettiesNumber","emojies","console","error","canvasRect","getBoundingClientRect","yPosition","leftConfettiPosition","rightConfettiPosition","confettiGroup","confettiOnTheRight","confettiOnTheLeft","addShapes","getBatchCompletePromise","remove","addEventListener","jsConfetti","getElementById","boom","addConfetti","sadboom","spans","querySelectorAll","forEach","span","index","animation","animationDelay"],"version":3,"file":"index.69d0eb4b.js.map"}